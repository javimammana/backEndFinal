<div class='content'>
    <div class="w100 flex colum center">
        {{#if cart.products}}
        <h1>Carrito</h1>
            <div class="w100">
                {{#each enStock}}
                <div class="border flex w100 between cartPrincipal">
                    <div class="flex w100 cartPrincipal">
                        <div class="imgCart">
                            <img class="" src="img/products/{{this.product.img}}">
                        </div>
                        <div class="w100 infoCart">
                            <div class="">
                                <h3>{{this.product.title}}</h3>
                                <p>{{this.product.code}}</p>
                            </div>
                            <div class="">
                                <div class="flex">
                                    <p>Cant: </p>
                                    <button class="btnCANT btnWARNIG" onclick="restar('{{../user.cart}}','{{this.product._id}}', {{this.quantity}}, {{this.product.stock}})">-</button>
                                    <p>{{this.quantity}}</p>
                                    <button class="btnCANT btnWARNIG" onclick="sumar('{{../user.cart}}','{{this.product._id}}', {{this.quantity}}, {{this.product.stock}})">+</button>
                                </div>
                            </div>
                            <div class="flex w100 between cartPrice">
                                <h5>Precio por unidad: ${{this.product.price}}</h5>
                                <p>$ {{ this.totalPrice }}</p>
                            </div>
                        </div>
                    </div>
                    <div class="">
                        <button class="btn btnRED" onclick="eliminarProducto('{{../user.cart}}', '{{this.product._id}}')">Borrar</button>
                    </div>
                </div>
            {{/each}}

            {{#each sinStock}}
                <div class="border flex w100 between cartPrincipal">
                    <div class="flex w100 cartPrincipal">
                        <div class="imgCart">
                            <img class="" src="img/products/{{this.product.img}}">
                        </div>
                        <div class="infoCart">
                            <div class="detalleCard detalleAling">
                                <h3>{{this.product.title}}</h3>
                                <p>{{this.product.code}}</p>
                            </div>
                            <div class="">
                                <div class="flex">
                                    <p>Cant: </p>
                                    <p>{{this.quantity}}</p>
                                    <button class="btn btnWARNIG" onclick="updateProduct('{{../user.cart}}','{{this.product._id}}', {{this.quantity}}, {{this.product.stock}})">Max stock</button>
                                </div>
                                <p>Excede el stock de {{this.product.stock}} unidades disponibles.</p>
                                <p>Al procesar carrito, no sera incluido en la compra.-</p>
                                <p>Puedes modificar la cantidad por el maximo de stock disponible.-</p>
                            </div>
                            <div class="flex w100 between cartPrice">
                                <h5>Precio por unidad: ${{this.product.price}}</h5>
                                <p>$ {{ this.totalPrice }}</p>
                            </div>
                        </div>
                    </div>
                    <div class="">
                        <button class="btn btnDel btn btnRED" onclick="eliminarProducto('{{../user.cart}}', '{{this.product._id}}')">Borrar</button>
                    </div>
                </div>
            {{/each}}

        <div class="flex w100 total border">
            <p class="totalCart">Total por el Carrito ${{totalFinal}} .-</p>
        </div>
        <div class="w100">
            <form action="/api/carts/{{user.cart}}/purchase" method="POST">
                <button class="w100 btn btnWARNIG" type="submit">Pagar</button>
            </form>
        </div>
        <div class="w100">
            <button class="w100 btn btnRED" onclick="vaciarCarrito('{{user.cart}}')">Vaciar Carrito</button>
        </div>
        </div>

            </div>
        {{else}}
        <h1>Carrito Vacio</h1>
        {{/if}}
    </div>
</div>


<script>
    function eliminarProducto(cartId, productId) {
        fetch(`/api/carts/${cartId}/product/${productId}`, {
            method: 'DELETE'
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Error al eliminar el producto del carrito');
                }
                location.reload();
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }

        function sumar(cartId, productId, quantity, stock) {
            if(quantity < stock) {
                const data = { quantity: quantity+1 };
                fetch(`/api/carts/${cartId}/product/${productId}`, {
                    method: 'PUT',
                    body: JSON.stringify(data),
                    headers: {
                        "Content-Type": "application/json",
                    }
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Error al eliminar el producto del carrito');
                        }
                        location.reload();
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            }
    }

            function restar(cartId, productId, quantity, stock) {
            if(quantity > 1) {
                const data = { quantity: quantity-1 };
                fetch(`/api/carts/${cartId}/product/${productId}`, {
                    method: 'PUT',
                    body: JSON.stringify(data),
                    headers: {
                        "Content-Type": "application/json",
                    }
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Error al eliminar el producto del carrito');
                        }
                        location.reload();
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            }
    }

    function updateProduct(cartId, productId, quantity, stock) {
        const data = { quantity: stock };
        fetch(`/api/carts/${cartId}/product/${productId}`, {
            method: 'PUT',
            body: JSON.stringify(data),
            headers: {
                "Content-Type": "application/json",
            }
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Error al eliminar el producto del carrito');
                }
                location.reload();
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }

    function vaciarCarrito(cartId) {
        fetch(`/api/carts/${cartId}`, {
            method: 'DELETE'
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Error al vaciar el carrito');
                }
                location.reload();
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }
</script>